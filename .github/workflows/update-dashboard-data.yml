name: Update Dashboard Data

on:
  push:
    branches: [ main, develop, staging ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Update dashboard data every 15 minutes during work hours (9 AM - 6 PM UTC)
    - cron: '*/15 9-18 * * 1-5'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  update-dashboard-data:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: read
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for accurate Git data
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Configure Git
      run: |
        git config --global user.name "Dashboard Bot"
        git config --global user.email "dashboard-bot@users.noreply.github.com"
        
    - name: Update dashboard data
      run: |
        chmod +x scripts/update-dashboard-data.sh
        ./scripts/update-dashboard-data.sh
        
    - name: Generate team activity report
      run: |
        # Create enhanced team activity data
        mkdir -p dashboards/data/reports
        
        # Recent commits by author
        git log --since="7 days ago" --pretty=format:'%an|%s|%cr|%h' --no-merges > dashboards/data/reports/recent-commits.txt
        
        # Branch activity
        git for-each-ref --format='%(refname:short)|%(committerdate:relative)|%(authorname)' refs/heads/ > dashboards/data/reports/branch-activity.txt
        
        # Contributor stats
        git shortlog -sn --since="30 days ago" > dashboards/data/reports/contributor-stats.txt
        
    - name: Generate branch health report
      run: |
        # Check for stale branches
        echo "# Branch Health Report" > dashboards/data/reports/branch-health.md
        echo "Generated: $(date)" >> dashboards/data/reports/branch-health.md
        echo "" >> dashboards/data/reports/branch-health.md
        
        echo "## Active Branches" >> dashboards/data/reports/branch-health.md
        git for-each-ref --format='- **%(refname:short)** - %(committerdate:relative) by %(authorname)' refs/heads/ --sort=-committerdate >> dashboards/data/reports/branch-health.md
        
        echo "" >> dashboards/data/reports/branch-health.md
        echo "## Stale Branches (>30 days)" >> dashboards/data/reports/branch-health.md
        git for-each-ref --format='- **%(refname:short)** - %(committerdate:relative) by %(authorname)' refs/heads/ --sort=-committerdate | grep -E "(month|year)" || echo "No stale branches found" >> dashboards/data/reports/branch-health.md
        
    - name: Update dashboard timestamps
      run: |
        # Update last-updated timestamps in HTML files
        find dashboards -name "*.html" -exec sed -i 's/Last updated: [^<]*/Last updated: '"$(date)"'/g' {} \;
        
    - name: Commit updated data
      run: |
        git add dashboards/data/
        git add dashboards/*.html
        
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "chore: update dashboard data [skip ci]
          
          - Updated Git status and branch information
          - Generated team activity reports
          - Updated branch health metrics
          - Refreshed dashboard timestamps
          
          Auto-generated by GitHub Actions"
          
          git push origin ${{ github.ref_name }}
        fi
        
    - name: Create dashboard deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: dashboard-files
        path: dashboards/
        retention-days: 30